Terminals unused in grammar

    IFTOKEN
    ELSETOKEN
    STRCONST
    ERROR
    ILLEGAL_TOKEN


State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: decl
    3         | declList decl

    4 decl: vardecl
    5     | funDecl

    6 vardecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID SEMICLN

    8 typeSpecifier: KWD_INT
    9              | KWD_CHAR
   10              | KWD_VOID

   11 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN funBody
   12        | typeSpecifier ID LPAREN RPAREN funBody

   13 formalDeclList: formalDecl
   14               | formalDecl COMMA formalDeclList

   15 formalDecl: typeSpecifier ID
   16           | typeSpecifier ID LSQ_BRKT RSQ_BRKT

   17 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT

   18 localDeclList: %empty
   19              | vardecl localDeclList

   20 statementList: %empty
   21              | statement statementList

   22 statement: compoundStmt
   23          | assignStmt
   24          | condStmt
   25          | loopStmt
   26          | returnStmt

   27 loopStmt: KWD_WHILE LPAREN expression RPAREN statement

   28 returnStmt: KWD_RETURN SEMICLN
   29           | KWD_RETURN expression SEMICLN

   30 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT

   31 assignStmt: var OPER_ASGN expression SEMICLN
   32           | expression SEMICLN

   33 condStmt: KWD_IF LPAREN expression RPAREN statement
   34         | KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement

   35 var: ID
   36    | ID LSQ_BRKT addExpr RSQ_BRKT

   37 expression: addExpr
   38           | expression relop addExpr

   39 relop: OPER_EQ
   40      | OPER_GT
   41      | OPER_LT
   42      | OPER_GTE
   43      | OPER_LTE
   44      | OPER_NEQ

   45 addExpr: term
   46        | addExpr addop term

   47 addop: OPER_ADD
   48      | OPER_SUB

   49 term: factor
   50     | term mulop factor

   51 mulop: OPER_MUL
   52      | OPER_DIV

   53 factor: LPAREN expression RPAREN
   54       | var
   55       | funcCallExpr
   56       | INTCONST
   57       | CHARCONST

   58 funcCallExpr: ID LPAREN argList RPAREN
   59             | ID LPAREN RPAREN

   60 argList: expression
   61        | argList COMMA expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IFTOKEN <value> (258)
    ELSETOKEN <value> (259)
    LPAREN <value> (260) 11 12 27 33 34 53 58 59
    RPAREN <value> (261) 11 12 27 33 34 53 58 59
    SEMICLN <value> (262) 6 7 28 29 31 32
    COMMA <value> (263) 14 61
    KWD_INT <value> (264) 8
    KWD_IF <value> (265) 33 34
    KWD_ELSE <value> (266) 34
    KWD_WHILE <value> (267) 27
    KWD_CHAR <value> (268) 9
    KWD_RETURN <value> (269) 28 29
    KWD_VOID <value> (270) 10
    OPER_ADD <value> (271) 47
    OPER_SUB <value> (272) 48
    OPER_MUL <value> (273) 51
    OPER_DIV <value> (274) 52
    OPER_LTE <value> (275) 43
    OPER_GTE <value> (276) 42
    OPER_LT <value> (277) 41
    OPER_GT <value> (278) 40
    OPER_EQ <value> (279) 39
    OPER_NEQ <value> (280) 44
    OPER_ASGN <value> (281) 31
    LSQ_BRKT <value> (282) 6 16 36
    RSQ_BRKT <value> (283) 6 16 36
    LCRLY_BRKT <value> (284) 17 30
    RCRLY_BRKT <value> (285) 17 30
    ID <strval> (286) 6 7 11 12 15 16 35 36 58 59
    INTCONST <value> (287) 6 56
    CHARCONST <value> (288) 57
    STRCONST <value> (289)
    ERROR <value> (290)
    ILLEGAL_TOKEN <value> (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program <node> (38)
        on left: 1
        on right: 0
    declList <node> (39)
        on left: 2 3
        on right: 1 3
    decl <node> (40)
        on left: 4 5
        on right: 2 3
    vardecl <node> (41)
        on left: 6 7
        on right: 4 19
    typeSpecifier <node> (42)
        on left: 8 9 10
        on right: 6 7 11 12 15 16
    funDecl <node> (43)
        on left: 11 12
        on right: 5
    formalDeclList <node> (44)
        on left: 13 14
        on right: 11 14
    formalDecl <node> (45)
        on left: 15 16
        on right: 13 14
    funBody <node> (46)
        on left: 17
        on right: 11 12
    localDeclList <node> (47)
        on left: 18 19
        on right: 17 19
    statementList <node> (48)
        on left: 20 21
        on right: 17 21 30
    statement <node> (49)
        on left: 22 23 24 25 26
        on right: 21 27 33 34
    loopStmt <node> (50)
        on left: 27
        on right: 25
    returnStmt <node> (51)
        on left: 28 29
        on right: 26
    compoundStmt <node> (52)
        on left: 30
        on right: 22
    assignStmt <node> (53)
        on left: 31 32
        on right: 23
    condStmt <node> (54)
        on left: 33 34
        on right: 24
    var <node> (55)
        on left: 35 36
        on right: 31 54
    expression <node> (56)
        on left: 37 38
        on right: 27 29 31 32 33 34 38 53 60 61
    relop <node> (57)
        on left: 39 40 41 42 43 44
        on right: 38
    addExpr <node> (58)
        on left: 45 46
        on right: 36 37 38 46
    addop <node> (59)
        on left: 47 48
        on right: 46
    term <node> (60)
        on left: 49 50
        on right: 45 46 50
    mulop <node> (61)
        on left: 51 52
        on right: 50
    factor <node> (62)
        on left: 53 54 55 56 57
        on right: 49 50
    funcCallExpr <node> (63)
        on left: 58 59
        on right: 55
    argList <node> (64)
        on left: 60 61
        on right: 58 61


State 0

    0 $accept: . program $end

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    program        go to state 4
    declList       go to state 5
    decl           go to state 6
    vardecl        go to state 7
    typeSpecifier  go to state 8
    funDecl        go to state 9


State 1

    8 typeSpecifier: KWD_INT .

    $default  reduce using rule 8 (typeSpecifier)


State 2

    9 typeSpecifier: KWD_CHAR .

    $default  reduce using rule 9 (typeSpecifier)


State 3

   10 typeSpecifier: KWD_VOID .

    $default  reduce using rule 10 (typeSpecifier)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 10


State 5

    1 program: declList .
    3 declList: declList . decl

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 1 (program)

    decl           go to state 11
    vardecl        go to state 7
    typeSpecifier  go to state 8
    funDecl        go to state 9


State 6

    2 declList: decl .

    $default  reduce using rule 2 (declList)


State 7

    4 decl: vardecl .

    $default  reduce using rule 4 (decl)


State 8

    6 vardecl: typeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier . ID SEMICLN
   11 funDecl: typeSpecifier . ID LPAREN formalDeclList RPAREN funBody
   12        | typeSpecifier . ID LPAREN RPAREN funBody

    ID  shift, and go to state 12


State 9

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 declList: declList decl .

    $default  reduce using rule 3 (declList)


State 12

    6 vardecl: typeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID . SEMICLN
   11 funDecl: typeSpecifier ID . LPAREN formalDeclList RPAREN funBody
   12        | typeSpecifier ID . LPAREN RPAREN funBody

    LPAREN    shift, and go to state 13
    SEMICLN   shift, and go to state 14
    LSQ_BRKT  shift, and go to state 15


State 13

   11 funDecl: typeSpecifier ID LPAREN . formalDeclList RPAREN funBody
   12        | typeSpecifier ID LPAREN . RPAREN funBody

    RPAREN    shift, and go to state 16
    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    typeSpecifier   go to state 17
    formalDeclList  go to state 18
    formalDecl      go to state 19


State 14

    7 vardecl: typeSpecifier ID SEMICLN .

    $default  reduce using rule 7 (vardecl)


State 15

    6 vardecl: typeSpecifier ID LSQ_BRKT . INTCONST RSQ_BRKT SEMICLN

    INTCONST  shift, and go to state 20


State 16

   12 funDecl: typeSpecifier ID LPAREN RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 21

    funBody  go to state 22


State 17

   15 formalDecl: typeSpecifier . ID
   16           | typeSpecifier . ID LSQ_BRKT RSQ_BRKT

    ID  shift, and go to state 23


State 18

   11 funDecl: typeSpecifier ID LPAREN formalDeclList . RPAREN funBody

    RPAREN  shift, and go to state 24


State 19

   13 formalDeclList: formalDecl .
   14               | formalDecl . COMMA formalDeclList

    COMMA  shift, and go to state 25

    $default  reduce using rule 13 (formalDeclList)


State 20

    6 vardecl: typeSpecifier ID LSQ_BRKT INTCONST . RSQ_BRKT SEMICLN

    RSQ_BRKT  shift, and go to state 26


State 21

   17 funBody: LCRLY_BRKT . localDeclList statementList RCRLY_BRKT

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 18 (localDeclList)

    vardecl        go to state 27
    typeSpecifier  go to state 28
    localDeclList  go to state 29


State 22

   12 funDecl: typeSpecifier ID LPAREN RPAREN funBody .

    $default  reduce using rule 12 (funDecl)


State 23

   15 formalDecl: typeSpecifier ID .
   16           | typeSpecifier ID . LSQ_BRKT RSQ_BRKT

    LSQ_BRKT  shift, and go to state 30

    $default  reduce using rule 15 (formalDecl)


State 24

   11 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 21

    funBody  go to state 31


State 25

   14 formalDeclList: formalDecl COMMA . formalDeclList

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    typeSpecifier   go to state 17
    formalDeclList  go to state 32
    formalDecl      go to state 19


State 26

    6 vardecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT . SEMICLN

    SEMICLN  shift, and go to state 33


State 27

   19 localDeclList: vardecl . localDeclList

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 18 (localDeclList)

    vardecl        go to state 27
    typeSpecifier  go to state 28
    localDeclList  go to state 34


State 28

    6 vardecl: typeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier . ID SEMICLN

    ID  shift, and go to state 35


State 29

   17 funBody: LCRLY_BRKT localDeclList . statementList RCRLY_BRKT

    LPAREN      shift, and go to state 36
    KWD_IF      shift, and go to state 37
    KWD_WHILE   shift, and go to state 38
    KWD_RETURN  shift, and go to state 39
    LCRLY_BRKT  shift, and go to state 40
    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43

    $default  reduce using rule 20 (statementList)

    statementList  go to state 44
    statement      go to state 45
    loopStmt       go to state 46
    returnStmt     go to state 47
    compoundStmt   go to state 48
    assignStmt     go to state 49
    condStmt       go to state 50
    var            go to state 51
    expression     go to state 52
    addExpr        go to state 53
    term           go to state 54
    factor         go to state 55
    funcCallExpr   go to state 56


State 30

   16 formalDecl: typeSpecifier ID LSQ_BRKT . RSQ_BRKT

    RSQ_BRKT  shift, and go to state 57


State 31

   11 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN funBody .

    $default  reduce using rule 11 (funDecl)


State 32

   14 formalDeclList: formalDecl COMMA formalDeclList .

    $default  reduce using rule 14 (formalDeclList)


State 33

    6 vardecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN .

    $default  reduce using rule 6 (vardecl)


State 34

   19 localDeclList: vardecl localDeclList .

    $default  reduce using rule 19 (localDeclList)


State 35

    6 vardecl: typeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID . SEMICLN

    SEMICLN   shift, and go to state 14
    LSQ_BRKT  shift, and go to state 15


State 36

   53 factor: LPAREN . expression RPAREN

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    expression    go to state 59
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 37

   33 condStmt: KWD_IF . LPAREN expression RPAREN statement
   34         | KWD_IF . LPAREN expression RPAREN statement KWD_ELSE statement

    LPAREN  shift, and go to state 60


State 38

   27 loopStmt: KWD_WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 61


State 39

   28 returnStmt: KWD_RETURN . SEMICLN
   29           | KWD_RETURN . expression SEMICLN

    LPAREN     shift, and go to state 36
    SEMICLN    shift, and go to state 62
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    expression    go to state 63
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 40

   30 compoundStmt: LCRLY_BRKT . statementList RCRLY_BRKT

    LPAREN      shift, and go to state 36
    KWD_IF      shift, and go to state 37
    KWD_WHILE   shift, and go to state 38
    KWD_RETURN  shift, and go to state 39
    LCRLY_BRKT  shift, and go to state 40
    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43

    $default  reduce using rule 20 (statementList)

    statementList  go to state 64
    statement      go to state 45
    loopStmt       go to state 46
    returnStmt     go to state 47
    compoundStmt   go to state 48
    assignStmt     go to state 49
    condStmt       go to state 50
    var            go to state 51
    expression     go to state 52
    addExpr        go to state 53
    term           go to state 54
    factor         go to state 55
    funcCallExpr   go to state 56


State 41

   35 var: ID .
   36    | ID . LSQ_BRKT addExpr RSQ_BRKT
   58 funcCallExpr: ID . LPAREN argList RPAREN
   59             | ID . LPAREN RPAREN

    LPAREN    shift, and go to state 65
    LSQ_BRKT  shift, and go to state 66

    $default  reduce using rule 35 (var)


State 42

   56 factor: INTCONST .

    $default  reduce using rule 56 (factor)


State 43

   57 factor: CHARCONST .

    $default  reduce using rule 57 (factor)


State 44

   17 funBody: LCRLY_BRKT localDeclList statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 67


State 45

   21 statementList: statement . statementList

    LPAREN      shift, and go to state 36
    KWD_IF      shift, and go to state 37
    KWD_WHILE   shift, and go to state 38
    KWD_RETURN  shift, and go to state 39
    LCRLY_BRKT  shift, and go to state 40
    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43

    $default  reduce using rule 20 (statementList)

    statementList  go to state 68
    statement      go to state 45
    loopStmt       go to state 46
    returnStmt     go to state 47
    compoundStmt   go to state 48
    assignStmt     go to state 49
    condStmt       go to state 50
    var            go to state 51
    expression     go to state 52
    addExpr        go to state 53
    term           go to state 54
    factor         go to state 55
    funcCallExpr   go to state 56


State 46

   25 statement: loopStmt .

    $default  reduce using rule 25 (statement)


State 47

   26 statement: returnStmt .

    $default  reduce using rule 26 (statement)


State 48

   22 statement: compoundStmt .

    $default  reduce using rule 22 (statement)


State 49

   23 statement: assignStmt .

    $default  reduce using rule 23 (statement)


State 50

   24 statement: condStmt .

    $default  reduce using rule 24 (statement)


State 51

   31 assignStmt: var . OPER_ASGN expression SEMICLN
   54 factor: var .

    OPER_ASGN  shift, and go to state 69

    $default  reduce using rule 54 (factor)


State 52

   32 assignStmt: expression . SEMICLN
   38 expression: expression . relop addExpr

    SEMICLN   shift, and go to state 70
    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    relop  go to state 77


State 53

   37 expression: addExpr .
   46 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 78
    OPER_SUB  shift, and go to state 79

    $default  reduce using rule 37 (expression)

    addop  go to state 80


State 54

   45 addExpr: term .
   50 term: term . mulop factor

    OPER_MUL  shift, and go to state 81
    OPER_DIV  shift, and go to state 82

    $default  reduce using rule 45 (addExpr)

    mulop  go to state 83


State 55

   49 term: factor .

    $default  reduce using rule 49 (term)


State 56

   55 factor: funcCallExpr .

    $default  reduce using rule 55 (factor)


State 57

   16 formalDecl: typeSpecifier ID LSQ_BRKT RSQ_BRKT .

    $default  reduce using rule 16 (formalDecl)


State 58

   54 factor: var .

    $default  reduce using rule 54 (factor)


State 59

   38 expression: expression . relop addExpr
   53 factor: LPAREN expression . RPAREN

    RPAREN    shift, and go to state 84
    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    relop  go to state 77


State 60

   33 condStmt: KWD_IF LPAREN . expression RPAREN statement
   34         | KWD_IF LPAREN . expression RPAREN statement KWD_ELSE statement

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    expression    go to state 85
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 61

   27 loopStmt: KWD_WHILE LPAREN . expression RPAREN statement

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    expression    go to state 86
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 62

   28 returnStmt: KWD_RETURN SEMICLN .

    $default  reduce using rule 28 (returnStmt)


State 63

   29 returnStmt: KWD_RETURN expression . SEMICLN
   38 expression: expression . relop addExpr

    SEMICLN   shift, and go to state 87
    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    relop  go to state 77


State 64

   30 compoundStmt: LCRLY_BRKT statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 88


State 65

   58 funcCallExpr: ID LPAREN . argList RPAREN
   59             | ID LPAREN . RPAREN

    LPAREN     shift, and go to state 36
    RPAREN     shift, and go to state 89
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    expression    go to state 90
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56
    argList       go to state 91


State 66

   36 var: ID LSQ_BRKT . addExpr RSQ_BRKT

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    addExpr       go to state 92
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 67

   17 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT .

    $default  reduce using rule 17 (funBody)


State 68

   21 statementList: statement statementList .

    $default  reduce using rule 21 (statementList)


State 69

   31 assignStmt: var OPER_ASGN . expression SEMICLN

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    expression    go to state 93
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 70

   32 assignStmt: expression SEMICLN .

    $default  reduce using rule 32 (assignStmt)


State 71

   43 relop: OPER_LTE .

    $default  reduce using rule 43 (relop)


State 72

   42 relop: OPER_GTE .

    $default  reduce using rule 42 (relop)


State 73

   41 relop: OPER_LT .

    $default  reduce using rule 41 (relop)


State 74

   40 relop: OPER_GT .

    $default  reduce using rule 40 (relop)


State 75

   39 relop: OPER_EQ .

    $default  reduce using rule 39 (relop)


State 76

   44 relop: OPER_NEQ .

    $default  reduce using rule 44 (relop)


State 77

   38 expression: expression relop . addExpr

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    addExpr       go to state 94
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 78

   47 addop: OPER_ADD .

    $default  reduce using rule 47 (addop)


State 79

   48 addop: OPER_SUB .

    $default  reduce using rule 48 (addop)


State 80

   46 addExpr: addExpr addop . term

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    term          go to state 95
    factor        go to state 55
    funcCallExpr  go to state 56


State 81

   51 mulop: OPER_MUL .

    $default  reduce using rule 51 (mulop)


State 82

   52 mulop: OPER_DIV .

    $default  reduce using rule 52 (mulop)


State 83

   50 term: term mulop . factor

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    factor        go to state 96
    funcCallExpr  go to state 56


State 84

   53 factor: LPAREN expression RPAREN .

    $default  reduce using rule 53 (factor)


State 85

   33 condStmt: KWD_IF LPAREN expression . RPAREN statement
   34         | KWD_IF LPAREN expression . RPAREN statement KWD_ELSE statement
   38 expression: expression . relop addExpr

    RPAREN    shift, and go to state 97
    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    relop  go to state 77


State 86

   27 loopStmt: KWD_WHILE LPAREN expression . RPAREN statement
   38 expression: expression . relop addExpr

    RPAREN    shift, and go to state 98
    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    relop  go to state 77


State 87

   29 returnStmt: KWD_RETURN expression SEMICLN .

    $default  reduce using rule 29 (returnStmt)


State 88

   30 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT .

    $default  reduce using rule 30 (compoundStmt)


State 89

   59 funcCallExpr: ID LPAREN RPAREN .

    $default  reduce using rule 59 (funcCallExpr)


State 90

   38 expression: expression . relop addExpr
   60 argList: expression .

    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    $default  reduce using rule 60 (argList)

    relop  go to state 77


State 91

   58 funcCallExpr: ID LPAREN argList . RPAREN
   61 argList: argList . COMMA expression

    RPAREN  shift, and go to state 99
    COMMA   shift, and go to state 100


State 92

   36 var: ID LSQ_BRKT addExpr . RSQ_BRKT
   46 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 78
    OPER_SUB  shift, and go to state 79
    RSQ_BRKT  shift, and go to state 101

    addop  go to state 80


State 93

   31 assignStmt: var OPER_ASGN expression . SEMICLN
   38 expression: expression . relop addExpr

    SEMICLN   shift, and go to state 102
    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    relop  go to state 77


State 94

   38 expression: expression relop addExpr .
   46 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 78
    OPER_SUB  shift, and go to state 79

    $default  reduce using rule 38 (expression)

    addop  go to state 80


State 95

   46 addExpr: addExpr addop term .
   50 term: term . mulop factor

    OPER_MUL  shift, and go to state 81
    OPER_DIV  shift, and go to state 82

    $default  reduce using rule 46 (addExpr)

    mulop  go to state 83


State 96

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


State 97

   33 condStmt: KWD_IF LPAREN expression RPAREN . statement
   34         | KWD_IF LPAREN expression RPAREN . statement KWD_ELSE statement

    LPAREN      shift, and go to state 36
    KWD_IF      shift, and go to state 37
    KWD_WHILE   shift, and go to state 38
    KWD_RETURN  shift, and go to state 39
    LCRLY_BRKT  shift, and go to state 40
    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43

    statement     go to state 103
    loopStmt      go to state 46
    returnStmt    go to state 47
    compoundStmt  go to state 48
    assignStmt    go to state 49
    condStmt      go to state 50
    var           go to state 51
    expression    go to state 52
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 98

   27 loopStmt: KWD_WHILE LPAREN expression RPAREN . statement

    LPAREN      shift, and go to state 36
    KWD_IF      shift, and go to state 37
    KWD_WHILE   shift, and go to state 38
    KWD_RETURN  shift, and go to state 39
    LCRLY_BRKT  shift, and go to state 40
    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43

    statement     go to state 104
    loopStmt      go to state 46
    returnStmt    go to state 47
    compoundStmt  go to state 48
    assignStmt    go to state 49
    condStmt      go to state 50
    var           go to state 51
    expression    go to state 52
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 99

   58 funcCallExpr: ID LPAREN argList RPAREN .

    $default  reduce using rule 58 (funcCallExpr)


State 100

   61 argList: argList COMMA . expression

    LPAREN     shift, and go to state 36
    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43

    var           go to state 58
    expression    go to state 105
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 101

   36 var: ID LSQ_BRKT addExpr RSQ_BRKT .

    $default  reduce using rule 36 (var)


State 102

   31 assignStmt: var OPER_ASGN expression SEMICLN .

    $default  reduce using rule 31 (assignStmt)


State 103

   33 condStmt: KWD_IF LPAREN expression RPAREN statement .
   34         | KWD_IF LPAREN expression RPAREN statement . KWD_ELSE statement

    KWD_ELSE  shift, and go to state 106

    KWD_ELSE  [reduce using rule 33 (condStmt)]
    $default  reduce using rule 33 (condStmt)


State 104

   27 loopStmt: KWD_WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 27 (loopStmt)


State 105

   38 expression: expression . relop addExpr
   61 argList: argList COMMA expression .

    OPER_LTE  shift, and go to state 71
    OPER_GTE  shift, and go to state 72
    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_EQ   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    $default  reduce using rule 61 (argList)

    relop  go to state 77


State 106

   34 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE . statement

    LPAREN      shift, and go to state 36
    KWD_IF      shift, and go to state 37
    KWD_WHILE   shift, and go to state 38
    KWD_RETURN  shift, and go to state 39
    LCRLY_BRKT  shift, and go to state 40
    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43

    statement     go to state 107
    loopStmt      go to state 46
    returnStmt    go to state 47
    compoundStmt  go to state 48
    assignStmt    go to state 49
    condStmt      go to state 50
    var           go to state 51
    expression    go to state 52
    addExpr       go to state 53
    term          go to state 54
    factor        go to state 55
    funcCallExpr  go to state 56


State 107

   34 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement .

    $default  reduce using rule 34 (condStmt)
